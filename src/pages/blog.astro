---
import Code from "../components/Code.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import { server } from "../lib/actions";

const page = Astro.url.searchParams.get("page") ?? "1";
const perPage = Astro.url.searchParams.get("per_page") ?? "12";
const search = Astro.url.searchParams.get("search") ?? undefined;

const { data, error } = await server.getPosts({
  page: Number(page),
  perPage: Number(perPage),
  searchQuery: search,
});

if (error) console.error(error.message);

let posts = data?.posts;
const hasNext = data?.hasNext;
const hasPrevious = data?.hasPrevious;
---

<BaseLayout title={"Blog"}>
  <main class="flex min-h-screen flex-col p-12">
    <header class="w-full text-center space-x-2">
      <a href="/" class="link">Homepage</a>
      <a href={"/blog"} class="link">Blog</a>
      <a href="/projects" class="link">Projects</a>
      <a href="/rss.xml" class="link">RSS</a>
    </header>
    <section id="description" class="m-4">
      <Code
        as="h1"
        code="# Welcome to my blog!"
        lang={"markdown"}
        alignment="center"
      />
      <Code
        as="h2"
        code="## This is where I throw my random pieces of knowledge or experience I get for being a developer."
        lang={"markdown"}
        alignment="center"
      />
      <Code
        as="h3"
        code="### I encourage you to take a look. One wise man once said that what we have to say, will be useful to somebody."
        lang={"markdown"}
        alignment="center"
      />
    </section>
    <section id="search-section" class="m-4">
      <form class="w-full text-center" data-form>
        <input
          type="search"
          name="search"
          id="search"
          maxlength="24"
          placeholder="Enter a search term..."
          class="w-full rounded-lg p-2 bg-mocha border-2 border-sky-blue focus-within:border-light-blue text-white font-medium outline-none"
          value={search ?? ""}
        />
      </form>
    </section>
    {
      posts && posts.length > 0 ? (
        <section
          id="posts"
          class="w-full grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8"
        >
          {posts.map((post) => {
            const { title, summary, tags, createdDate, modifiedDate, slug } =
              post;
            return (
              <a
                href={`/blog/${slug}?page=${page}&per_page=${perPage}${search ? `&search=${search}` : ""}`}
                class="w-full flex flex-col justify-center items-center p-6 bg-[#313244] rounded-lg shadow-lg hover:shadow-xl transform transition duration-500 hover:scale-105"
              >
                <h2 class="text-2xl font-bold text-[#CDD6F4] mb-2">{title}</h2>
                <p class="text-[#A6ADC8] mb-4">{summary}</p>
                <div class="flex flex-wrap items-center mb-4">
                  {tags.map((tag) => (
                    <span class="bg-[#45475A] text-[#F5E0DC] text-xs font-medium m-1 px-2.5 py-0.5 rounded">
                      {tag}
                    </span>
                  ))}
                </div>
                <div class="text-sm text-[#BAC2DE]">
                  <p>Created: {createdDate}</p>
                  {createdDate !== modifiedDate && (
                    <p>Modified: {modifiedDate}</p>
                  )}
                </div>
              </a>
            );
          })}
        </section>
      ) : (
        <section id="no-posts" class="w-full flex justify-center items-center">
          <span class="text-white m-2 text-center">
            There are no posts at this page. I don't know how you ended up here.
          </span>
        </section>
      )
    }
    <section
      id="pagination"
      class="w-full flex justify-center items-center m-4 space-x-4"
    >
      {
        hasPrevious && (
          <a
            href={`/blog?page=${Number(page) - 1}&per_page=${Number(perPage)}`}
            class="text-[#6CB4FF] hover:text-[#94D0FF] font-semibold"
          >
            Previous
          </a>
        )
      }
      <span class="text-white font-semibold">{Number(page)}</span>
      {
        hasNext && (
          <a
            href={`/blog?page=${Number(page) + 1}&per_page=${Number(perPage)}`}
            class="text-[#6CB4FF] hover:text-[#94D0FF] font-semibold"
          >
            Next
          </a>
        )
      }
    </section>
  </main>
  <script>
    import DOMPurify from "dompurify";
    const form = document.querySelector<HTMLFormElement>("[data-form]");
    if (!form) throw new Error("Search form was not found!");
    form.addEventListener("submit", (e: SubmitEvent) => {
      e.preventDefault();
      const formData = new FormData(form);
      let searchQuery = formData.get("search")?.toString();
      searchQuery = DOMPurify.sanitize(searchQuery ?? "");
      const searchParams = new URLSearchParams(window.location.search);
      const url = new URL("/blog", window.location.origin);
      url.searchParams.set("search", searchQuery);
      url.searchParams.set("page", searchParams.get("page") ?? "1");
      url.searchParams.set("per_page", searchParams.get("per_page") ?? "12");
      window.location.assign(url.toString());
    });
  </script>
</BaseLayout>
